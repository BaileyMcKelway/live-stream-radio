(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"./src/raspberryPi.mdx":function(e,t,a){"use strict";a.r(t);var n=a("./node_modules/react/index.js"),r=a.n(n),o=a("./node_modules/@mdx-js/tag/dist/index.js");function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}t.default=function(e){var t=e.components;p(e,["components"]);return r.a.createElement(o.MDXTag,{name:"wrapper",components:t},r.a.createElement(o.MDXTag,{name:"h1",components:t,props:{id:"raspberry-pi"}},"Raspberry Pi"),r.a.createElement(o.MDXTag,{name:"p",components:t},"This page contains tips for setting up ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"live-stream-radio")," on a raspberry pi. If you have any performance issues, or are not comfortable using Node.js, feel free to use the older (no longer updated) version of the project, ",r.a.createElement(o.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://github.com/torch2424/live-stream-radio/tree/1.2.0"}},"piStreamRadio v1.2.0"),". Please read over the ",r.a.createElement(o.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"/cli/getting-started"}},"CLI Getting Started")," to have context on what steps are required, and how these steps streamline the usual install process for Raspberry Pis."),r.a.createElement(o.MDXTag,{name:"h3",components:t,props:{id:"ffmpeg-installation"}},"FFmpeg Installation"),r.a.createElement(o.MDXTag,{name:"p",components:t},"Installing live-stream-radio on a raspberry pi follows the same proedures from the ",r.a.createElement(o.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"/cli/getting-started"}},"CLI Getting Started"),", however, there is a more streamlined way of getting FFmpeg installed. Since the project was formerly called ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"piStreamRadio"),", we have an old script to compile FFmpeg for you on the ",r.a.createElement(o.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://github.com/torch2424/live-stream-radio/blob/1.2.0/additionalScripts/compileFFmpeg.sh"}},"piStreamRadio v1.2.0 ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"additionalScripts/compileFFmpeg.sh")),". Re-iterating from the ",r.a.createElement(o.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"/cli/getting-started"}},"CLI Getting Started"),", ",r.a.createElement(o.MDXTag,{name:"strong",components:t,parentName:"p"},"Note: this project requires FFmpeg version 4.2.0 or greater in order to ensure the best performance. ",r.a.createElement(o.MDXTag,{name:"a",components:t,parentName:"strong",props:{href:"https://github.com/torch2424/live-stream-radio/issues/78"}},"Please see this issue for explanation")),"."),r.a.createElement(o.MDXTag,{name:"h3",components:t,props:{id:"configuring-your-project"}},"Configuring your project"),r.a.createElement(o.MDXTag,{name:"p",components:t},"After following the easy FFmpeg installation steps above, and completing the rest of the ",r.a.createElement(o.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"/cli/getting-started"}},"CLI Getting Started"),", here are some nice defaults for raspberry pi to get things performing better. You want to replace the values of the keys in your project ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"congig.json")," with the ones below:"),r.a.createElement(o.MDXTag,{name:"table",components:t},r.a.createElement(o.MDXTag,{name:"thead",components:t,parentName:"table"},r.a.createElement(o.MDXTag,{name:"tr",components:t,parentName:"thead"},r.a.createElement(o.MDXTag,{name:"th",components:t,parentName:"tr",props:{align:null}},"Field"),r.a.createElement(o.MDXTag,{name:"th",components:t,parentName:"tr",props:{align:null}},"Usage"))),r.a.createElement(o.MDXTag,{name:"tbody",components:t,parentName:"table"},r.a.createElement(o.MDXTag,{name:"tr",components:t,parentName:"tbody"},r.a.createElement(o.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:null}},"audio_codec"),r.a.createElement(o.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:null}},'"libfdk_aac"')),r.a.createElement(o.MDXTag,{name:"tr",components:t,parentName:"tbody"},r.a.createElement(o.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:null}},"crf"),r.a.createElement(o.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:null}},'"32"')),r.a.createElement(o.MDXTag,{name:"tr",components:t,parentName:"tbody"},r.a.createElement(o.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:null}},"preset"),r.a.createElement(o.MDXTag,{name:"td",components:t,parentName:"tr",props:{align:null}},'"ultrafast"')))),r.a.createElement(o.MDXTag,{name:"p",components:t},'This should definitely help performance and reduce buffering for your viewers. Also, note, that decreasing "video_fps" may not actuall improve your performance, as this can affect how videos are encoded, and the rate at which this happens.'),r.a.createElement(o.MDXTag,{name:"h3",components:t,props:{id:"adding-video-to-your-project"}},"Adding Video to your project"),r.a.createElement(o.MDXTag,{name:"p",components:t},"We ",r.a.createElement(o.MDXTag,{name:"strong",components:t,parentName:"p"},"Definitely")," reccomend using the fastest formats for decoding so that they can be encoded faster and put less strain on the pi. We reccomend adding ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:t,parentName:"p"},".webm")," to store your video, as for some reason FFmpeg tends to handle this to best."))}}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"./src/generate/tips.mdx":function(e,t,n){"use strict";n.r(t);var o=n("./node_modules/react/index.js"),a=n.n(o),r=n("./node_modules/@mdx-js/tag/dist/index.js");function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}t.default=function(e){var t=e.components;s(e,["components"]);return a.a.createElement(r.MDXTag,{name:"wrapper",components:t},a.a.createElement(r.MDXTag,{name:"h1",components:t,props:{id:"tips"}},"Tips"),a.a.createElement(r.MDXTag,{name:"h2",components:t,props:{id:"file-management"}},"File Management"),a.a.createElement(r.MDXTag,{name:"p",components:t},"I'd suggest using a lightweight file server like ",a.a.createElement(r.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://github.com/silverwind/droppy"}},"Droppy")," to allow easy access to your stream files. Also, Droppy will let you edit the ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"config.json")," file on the server itself! Another file server I could suggest would be ",a.a.createElement(r.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"http://www.filerun.com/"}},"Filerun"),", it is a lot heavier than Droppy, but offers a more robust interface, and file meta data editing!"),a.a.createElement(r.MDXTag,{name:"h2",components:t,props:{id:"systemd--run-on-boot"}},"Systemd / Run on Boot"),a.a.createElement(r.MDXTag,{name:"p",components:t},"On Ubuntu and Raspbian machine, you can get the stream to run on boot using systemd. I have a ",a.a.createElement(r.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"https://github.com/torch2424/dotFiles/blob/master/.files_templates/systemctl.service"}},"systemctl service")," in my personal dotfiles I fill out to do this. I'd suggest looking there, and the links I provided in the comments to see how to get up and running with this. Another alternative is to look into setting this up in a crontab using ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"@reboot"),"."))}}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./src/api/endpoints.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),o=a.n(t),m=a("./node_modules/@mdx-js/tag/dist/index.js");function r(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},m=Object.keys(e);for(t=0;t<m.length;t++)a=m[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(t=0;t<m.length;t++)a=m[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}n.default=function(e){var n=e.components;r(e,["components"]);return o.a.createElement(m.MDXTag,{name:"wrapper",components:n},o.a.createElement(m.MDXTag,{name:"h1",components:n,props:{id:"endpoints"}},"Endpoints"),o.a.createElement(m.MDXTag,{name:"p",components:n},"The API is written as an HTTP JSON REST API. Meaning all requests are expected to be of ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Content-Type: application/json"),", and will return JSON. Also, will use the standard ",o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://www.restapitutorial.com/httpstatuscodes.html"}},"HTTP REST status codes"),"."),o.a.createElement(m.MDXTag,{name:"p",components:n},"All Api Endpoints require the API key within the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"config.json")," to make / return responses to requests."),o.a.createElement(m.MDXTag,{name:"p",components:n},"The API Key can be provided in 3 ways:"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Through an ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"Authorization")," Header.")),o.a.createElement(m.MDXTag,{name:"p",components:n},o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Authorization: my-api-key")),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Through the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"api_key")," query paramater")),o.a.createElement(m.MDXTag,{name:"p",components:n},o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"localhost:3000/stream?api_key=my-api-key")),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Through the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"api_key")," POST body")),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{metaString:null}},'{\n\n"api_key": "my-api-key"\n\n...\n\n}\n')),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"get-stream"}},"GET /stream"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"description"}},"Description"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Returns the status of the stream."),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"query-params"}},"Query Params"),o.a.createElement(m.MDXTag,{name:"p",components:n},"None"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"example-successful-response"}},"Example Successful Response:"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{metaString:null}},'{\n    "isRunning": true\n}\n')),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"post-streamstart"}},"POST /stream/start"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"description-1"}},"Description"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Starts the stream, if not already running."),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"body-params"}},"Body Params"),o.a.createElement(m.MDXTag,{name:"p",components:n},"None"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"example-successful-response-1"}},"Example Successful Response:"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{metaString:null}},'{\n    "message": "OK"\n}\n')),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"post-streamstop"}},"POST /stream/stop"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"description-2"}},"Description"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Stops the stream, if running."),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"body-params-1"}},"Body Params"),o.a.createElement(m.MDXTag,{name:"p",components:n},"None"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"example-successful-response-2"}},"Example Successful Response:"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{metaString:null}},'{\n  "message": "OK"\n}\n')),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"post-streamrestart"}},"POST /stream/restart"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"description-3"}},"Description"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Restarts the stream, if running will stop and then start, if not running will simply start."),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"body-params-2"}},"Body Params"),o.a.createElement(m.MDXTag,{name:"p",components:n},"None"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"example-successful-response-3"}},"Example Successful Response:"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{metaString:null}},'{\n  "message": "OK"\n}\n')),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"get-history"}},"GET /history"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"description-4"}},"Description"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Returns the recorded history activites. This will return an array under the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"history")," key. To limit the size of this response, use the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"number_of_history_items")," in the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"config.json"),"."),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"query-params-1"}},"Query Params"),o.a.createElement(m.MDXTag,{name:"p",components:n},"None"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"example-successfule-response"}},"Example Successfule Response:"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Only one thing played on the stream so far in this history example"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{metaString:null}},'{\n    "history": [\n        {\n            "audio": {\n                "path": "/Users/aaron/Source/piStreamRadio/live-stream-radio/interludes/audio/tapeDeckSound.mp3",\n                "metadata": {\n                    "track": {\n                        "no": null,\n                        "of": null\n                    },\n                    "disk": {\n                        "no": null,\n                        "of": null\n                    },\n                    "artists": [\n                        "Stephan"\n                    ],\n                    "artist": "Stephan",\n                    "title": "tapedeck sound",\n                    "encodersettings": "Lavf57.72.101"\n                }\n            },\n            "video": {\n                "path": "/Users/aaron/Source/piStreamRadio/live-stream-radio/interludes/video/example 1.gif"\n            },\n            "date": 1538637389778\n        }\n    ]\n}\n')),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"get-radioaudio"}},"GET /radio/audio"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"description-5"}},"Description"),o.a.createElement(m.MDXTag,{name:"p",components:n},"This will return information about all found audio files in the project by following the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"config.json"),"."),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"query-params-2"}},"Query Params"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"include_metadata")," - if true, will also include the common metadata for the found audio files.")),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"example-successful-response-4"}},"Example Successful Response"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Only showing one item from the generated example content. And used the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"include_metadata")," query param."),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{metaString:null}},'{\n    "audio": [\n        {\n            "path": "/Users/aaron/Source/piStreamRadio/live-stream-radio/audio/Aviscerall - Just Livin\' - 05 Unhappy.mp3",\n            "metadata": {\n                "track": {\n                    "no": 5,\n                    "of": null\n                },\n                "disk": {\n                    "no": null,\n                    "of": null\n                },\n                "title": "Unhappy",\n                "artists": [\n                    "Aviscerall"\n                ],\n                "artist": "Aviscerall",\n                "album": "Just Livin\'",\n                "year": 2017,\n                "comment": [\n                    "Visit http://aviscerall.bandcamp.com"\n                ],\n                "albumartist": "Aviscerall"\n            }\n        },\n    ]\n}\n')))}}}]);